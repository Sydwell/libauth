name: Release
on:
  push:
    branches:
      - master
      - next

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      issues: read
      packages: write
      pull-requests: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies
        run: yarn install --immutable --immutable-cache
      - name: Get new version string
        run: |
          echo NEW_VERSION=$(yarn changeset status --output=release.json && grep -o '"newVersion":\s*"[^"]*' release.json | awk -F': "' '{print $2}' && rm release.json) >> "$GITHUB_ENV"
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          title: 'Release v${{env.NEW_VERSION}}'
          commit: 'Release v${{env.NEW_VERSION}}'
          version: yarn changeset:version
          publish: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
